<?php

/**
 * @file
 * Amdj Message module file.
 */

use Drupal\Core\Render\BubbleableMetadata;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function amdj_message_help($route_name, RouteMatchInterface $route_match) {

  switch ($route_name) {
    case 'help.page.amdj_message':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This is a custom module that outputs a message.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_token_info().
 */
function amdj_message_token_info() {
  $type = [
    'name' => t('Amdj Greeting'),
    'description' => t('The Amdj greeting value.'),
  ];

  $tokens['greeting'] = [
    'name' => t('Greeting'),
    'descriptions' => t('The Amdj Message greeting value.'),
  ];

  return [
    'types' => ['amdj_message' => $type],
    'tokens' => ['amdj_message' => $tokens],
  ];
}

/**
 * Implements hook_tokens().
 */
function amdj_message_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];
  if ($type == 'amdj_message') {
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'greeting':
          $replacements[$original] = \Drupal::service('amdj_message.greeting')->getGreeting();
          $config = \Drupal::config('amdj_message.custom_greeting');
          $bubbleable_metadata->addCacheableDependency($config);
          break;
      }
    }
  }
  return $replacements;
}

/**
 * Implements hook_theme().
 */
function amdj_message_theme($existing, $type, $theme, $path) {
  return [
    'amdj_message_greeting' => [
      'variables' => [
        'greeting' => NULL,
        'target' => NULL,
        'overriden' => FALSE,
      ],
    ],
  ];
}

/**
 * Default preprocessor function for the amdj_message_greeting theme hook.
 */
function template_preprocess_amdj_message_greeting(&$variables) {
  $variables['attributes'] = [
    'class' => ['greeting'],
  ];
}

function amdj_message_theme_suggestions_amdj_message_greeting($variables) {
  $suggestions = [];

  if ($variables['overriden'] === TRUE) {
    $suggestions[] = 'amdj_message_greeting__overriden';
  }

  return $suggestions;
}

/**
 * Implements hook_mail().
 */
function amdj_message_mail($key, &$message, $params) {
  switch ($key) {
    case 'amdj_message_log':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('There is an error on your website');
      $message['body'][] = $params['message'];
      $user_message = 'The user that was logged in: [current-user:name].';
      $message['body'][] = \Drupal::token()->replace($user_message, ['current-user' => \Drupal::currentUser()]);
      break;
  }
}
